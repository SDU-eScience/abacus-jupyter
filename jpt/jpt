#!/bin/bash

ROOT="/home/hansen/source/jupyter"
PORT=$((10000+UID))
ACCOUNT="$2"

TEMP=$(squeue -h -u $USER -n jupyter | tail -1 | awk '{ print $1, $5, $8}')
TEMP=($TEMP)
JOBID=${TEMP[0]}
STATUS=${TEMP[1]}
NODE=${TEMP[2]}
TUNNEL=$(ps -u $USER -f | grep "[s]sh.*${PORT}.*${NODE}" | awk '{ print $2 }')
TOKEN="$HOME/.jupyter/token"

jpt_status () {
	if [ -z "$STATUS" ]; then
		echo "Jupyter is not running"
	elif [ "$STATUS" == "R" ]; then
		echo "Jupyter is running with jobid $JOBID on node $NODE"
		if [ -n "$TUNNEL" ]; then
			echo "Connection is established"
		else
			echo "Connection is not yet established"
		fi
	elif [ "$STATUS" == "PD" ]; then
		echo "Jupyter is pending with jobid $JOBID";
	else
		echo "Jupyter is queued, but its status is currently unknown";
	fi
}

jpt_info () {
	cat $ROOT/readme | sed -e "s/<PORT>/$PORT/" -e "s/<USER>/$USER/"
}

jpt_usage () {
	echo "Usage: $0 command [options]"
	echo "List of commands:"
	echo "  info              Show information on how to use Jupyter on Abacus"
	echo "  start <account>   Same as start3"
	echo "  start2 <account>  Start an instance of Jupyter using Python 2.7 (submits a job to the queue using <account> or default account if none specified)"
	echo "  start3 <account>  Start an instance of Jupyter using Python 3.6 (submits a job to the queue using <account> or default account if none specified)"
	echo "  stop              Stop the running instance of Jupyter"
	echo "  status            Show status for Jupyter"
	echo "  connect           Connect to Jupyter once the job is running"
	echo "  token             Display the token needed to access the notebook"
}

jpt_start () {
	if [ -n "$JOBID" ]; then
		echo "Jupyter is already in the queue with jobid $JOBID"
		exit 0
	fi

	mkdir -p $HOME/.jupyter

	if [ ! -f $TOKEN ]; then
		head -c 1048576 /dev/urandom | md5sum | awk '{ print $1 }' > $TOKEN
	fi

	if [ -n "$ACCOUNT" ]; then
		VALID=$(sshare -U $USER -Ph | cut -d'|' -f1 | egrep "^${ACCOUNT}\$")
		if [ -z "$VALID" ]; then
			echo "The chosen account $ACCOUNT is not available, use 'abc-quota' to list available accounts"
			exit 0
		fi
	fi

	TMP=$(mktemp)
	cp $ROOT/jpt_submit${1} $TMP

	if [ -z "$ACCOUNT" ]; then
		sed -i "/<account>/d" $TMP
	else
		sed -i "s/<account>/$ACCOUNT/" $TMP
	fi

	TOKEN=$(cat $TOKEN)
	sed -i "s/<token>/$TOKEN/" $TMP

	JOBID=$(sbatch $TMP | awk '{ print $4 }')
	rm -f $TMP
	echo "Jupyter is queued with jobid $JOBID"
}

jpt_connect () {
	if [ -z "$STATUS" ]; then
		echo "Jupyter is not running"
		exit 0
	elif [ "$STATUS" == "PD" ]; then
		echo "Jupyter is still pending"
		exit 0
	elif [ "$STATUS" != "R" ]; then
		echo "Jupyter status is unknown";
		exit 0
	fi

	if [ -n "$TUNNEL" ]; then
		echo "Already connected"
	fi

	ssh -q -N -L $PORT:localhost:$PORT $NODE &
	echo "Connection established"
}

jpt_stop () {
	if [ -n "$TUNNEL" ]; then
		kill $TUNNEL
	fi

	if [ -n "$JOBID" ]; then
		scancel $JOBID > /dev/null
		echo "Stopped Jupyter with jobid $JOBID"
	else
		echo "Jupyter is not running"
	fi
}

jpt_token () {
	if [ -z "$STATUS" ]; then
		echo "Jupyter is not running"
		exit 0
	elif [ "$STATUS" == "PD" ]; then
		echo "Jupyter is still pending"
		exit 0
	elif [ "$STATUS" != "R" ]; then
		echo "Jupyter status is unknown";
		exit 0
	fi

	TOKEN=$(cat $TOKEN)
	echo "The token is: $TOKEN"
}

case "$1" in
	info)
		jpt_info
		;;
	status)
		jpt_status
		;;
	start|start3)
		jpt_start 3
		;;
	start2)
		jpt_start 2
		;;
	connect)
		jpt_connect
		;;
	stop)
		jpt_stop
		;;
	token)
		jpt_token
		;;
	*)
		jpt_usage
		;;
esac
